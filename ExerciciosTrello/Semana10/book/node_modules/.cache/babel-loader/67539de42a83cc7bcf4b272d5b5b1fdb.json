{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte-Falcontas\\\\DevinHouse\\\\ExerciciosTrello\\\\Semana10\\\\book\\\\src\\\\contexts\\\\Cart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext([]);\nexport function CartProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  function handleAddCart(book) {\n    const newBook = { ...book,\n      idBook: uuidv4()\n    };\n    setCart([...cart, newBook]);\n    localStorage.setItem(\"cart\", JSON.stringify([...cart, newBook])); //alert('Adicionado no carrinho')\n\n    toast.success('adicionado ao carrinho');\n  }\n\n  function handleRemoveItemInCart(idBook) {\n    const cartFiltered = cart.filter(item => {\n      if (item.idBook === idBook) {\n        return false; // Remove item do carrinho\n      } else {\n        return true; // permanece item no carrinho\n      }\n    });\n    setCart(cartFiltered);\n    localStorage.setItem(\"cart\", JSON.stringify(cartFiltered)); //alert('Removido do item')\n\n    toast.success('Removido do item');\n  }\n\n  useEffect(() => {\n    function handleGetItensLocalStorage() {\n      const storedArray = JSON.parse(localStorage.getItem(\"cart\")); // se storage estiver vazio , coloca um array vazio\n\n      setCart(storedArray || []);\n    }\n\n    handleGetItensLocalStorage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: cart,\n      addItem: handleAddCart,\n      removeItem: handleRemoveItemInCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Suporte-Falcontas/DevinHouse/ExerciciosTrello/Semana10/book/src/contexts/Cart/index.js"],"names":["createContext","useEffect","useState","v4","uuidv4","toast","CartContext","CartProvider","children","cart","setCart","handleAddCart","book","newBook","idBook","localStorage","setItem","JSON","stringify","success","handleRemoveItemInCart","cartFiltered","filter","item","handleGetItensLocalStorage","storedArray","parse","getItem","addItem","removeItem"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASO,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAGvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASS,aAAT,CAAuBC,IAAvB,EAA6B;AAEzB,UAAMC,OAAO,GAAG,EACZ,GAAGD,IADS;AAEZE,MAAAA,MAAM,EAAEV,MAAM;AAFF,KAAhB;AAKAM,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUI,OAAV,CAAD,CAAP;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAGT,IAAJ,EAAUI,OAAV,CAAf,CAA7B,EARyB,CASzB;;AACAR,IAAAA,KAAK,CAACc,OAAN,CAAc,wBAAd;AACH;;AAED,WAASC,sBAAT,CAAgCN,MAAhC,EAAwC;AACpC,UAAMO,YAAY,GAAGZ,IAAI,CAACa,MAAL,CAAYC,IAAI,IAAI;AACrC,UAAIA,IAAI,CAACT,MAAL,KAAgBA,MAApB,EAA4B;AACxB,eAAO,KAAP,CADwB,CACX;AAChB,OAFD,MAEO;AACH,eAAO,IAAP,CADG,CACS;AACf;AACJ,KANoB,CAArB;AAOAJ,IAAAA,OAAO,CAACW,YAAD,CAAP;AACAN,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeG,YAAf,CAA7B,EAToC,CAUpC;;AACAhB,IAAAA,KAAK,CAACc,OAAN,CAAc,kBAAd;AACH;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASuB,0BAAT,GAAsC;AAClC,YAAMC,WAAW,GAAGR,IAAI,CAACS,KAAL,CAAWX,YAAY,CAACY,OAAb,CAAqB,MAArB,CAAX,CAApB,CADkC,CAElC;;AACAjB,MAAAA,OAAO,CAACe,WAAW,IAAI,EAAhB,CAAP;AACH;;AACDD,IAAAA,0BAA0B;AAC7B,GAPQ,EAON,EAPM,CAAT;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,IAAI,EAAEA,IADH;AAEHmB,MAAAA,OAAO,EAAEjB,aAFN;AAGHkB,MAAAA,UAAU,EAAET;AAHT,KADX;AAAA,cAMKZ;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlDeD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const CartContext = createContext([]);\r\n\r\nexport function CartProvider({ children }) {\r\n\r\n\r\n    const [cart, setCart] = useState([]);\r\n\r\n    function handleAddCart(book) {\r\n\r\n        const newBook = {\r\n            ...book,\r\n            idBook: uuidv4()\r\n        }\r\n        \r\n        setCart([...cart, newBook])\r\n        localStorage.setItem(\"cart\", JSON.stringify([...cart, newBook]));\r\n        //alert('Adicionado no carrinho')\r\n        toast.success('adicionado ao carrinho')\r\n    }\r\n\r\n    function handleRemoveItemInCart(idBook) {\r\n        const cartFiltered = cart.filter(item => {\r\n            if (item.idBook === idBook) {\r\n                return false // Remove item do carrinho\r\n            } else {\r\n                return true // permanece item no carrinho\r\n            }\r\n        })\r\n        setCart(cartFiltered)\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartFiltered));\r\n        //alert('Removido do item')\r\n        toast.success('Removido do item')\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleGetItensLocalStorage() {\r\n            const storedArray = JSON.parse(localStorage.getItem(\"cart\"));\r\n            // se storage estiver vazio , coloca um array vazio\r\n            setCart(storedArray || [])\r\n        }\r\n        handleGetItensLocalStorage();\r\n    }, [])\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cart: cart,\r\n                addItem: handleAddCart,\r\n                removeItem: handleRemoveItemInCart\r\n            }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
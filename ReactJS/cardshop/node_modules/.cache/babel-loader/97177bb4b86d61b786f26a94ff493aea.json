{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevinHouse\\\\ReactJS\\\\cardshop\\\\src\\\\contexts\\\\Cart\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* \n  COMO CRIAR UM CONTEXTO \n  1 - Importar createContext do react\n  2 - atribui createContext para uma variável\n    Ex: export const CartContext = createContext([]);\n  3 - Criar o Provider\n  4 - Importar o Provider no App.js\n  5 - Consumir o contexto usando o useContex \n  ...\n*/\nimport { createContext, useEffect, useState } from \"react\"; // 1 \n\nimport Card from \"../../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext([]); // 2\n\nexport function CartProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  function handleAddCart(card) {\n    if (cart.find(item => item.id === card.id)) {\n      alert('Item ja adicionado ao carrinho');\n      return;\n    }\n\n    setCart([...cart, card]);\n    localStorage.setItem(\"cart\", JSON.stringify([...cart, card]));\n    alert('Adicionado no carrinho');\n  }\n\n  function handleRemoveItemCart(id) {\n    setCart(cart.filter(item => {\n      if (item.id === id) {\n        return false; //remove item do carrinho\n      } else {\n        return true; //permanece item no carrinho\n      }\n    }));\n    alert('Removido do carrinho');\n  }\n\n  useEffect(() => {\n    function handleGetItensLocalStorage() {\n      const storedArray = JSON.parse(localStorage.getItem(\"cart\")); // se storage estiver vazio , coloca um array vazio\n\n      setCart(storedArray || []);\n    }\n\n    handleGetItensLocalStorage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: cart,\n      addItem: handleAddCart,\n      removeItem: handleRemoveItemCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/DevinHouse/ReactJS/cardshop/src/contexts/Cart/index.js"],"names":["createContext","useEffect","useState","Card","CartContext","CartProvider","children","cart","setCart","handleAddCart","card","find","item","id","alert","localStorage","setItem","JSON","stringify","handleRemoveItemCart","filter","handleGetItensLocalStorage","storedArray","parse","getItem","addItem","removeItem"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD,C,CAA4D;;AAC5D,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC,C,CAAuC;;AAE9C,OAAO,SAASK,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASO,aAAT,CAAuBC,IAAvB,EAA6B;AAE3B,QAAIH,IAAI,CAACI,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,IAAI,CAACG,EAAnC,CAAJ,EAA4C;AAC1CC,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACA;AACD;;AACDN,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,IAAV,CAAD,CAAP;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAGX,IAAJ,EAAUG,IAAV,CAAf,CAA7B;AACAI,IAAAA,KAAK,CAAC,wBAAD,CAAL;AAGD;;AAED,WAASK,oBAAT,CAA8BN,EAA9B,EAAkC;AAChCL,IAAAA,OAAO,CAACD,IAAI,CAACa,MAAL,CAAYR,IAAI,IAAI;AAC1B,UAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,KAAP,CADkB,CACJ;AACf,OAFD,MAEO;AACL,eAAO,IAAP,CADK,CACQ;AACd;AACF,KANO,CAAD,CAAP;AAQAC,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACd,aAASoB,0BAAT,GAAsC;AACpC,YAAMC,WAAW,GAAGL,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,MAArB,CAAX,CAApB,CADoC,CAEpC;;AACAhB,MAAAA,OAAO,CAACc,WAAW,IAAI,EAAhB,CAAP;AACD;;AACDD,IAAAA,0BAA0B;AAC3B,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,IAAI,EAAEA,IADD;AAELkB,MAAAA,OAAO,EAAEhB,aAFJ;AAGLiB,MAAAA,UAAU,EAAEP;AAHP,KADT;AAAA,cAMGb;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhDeD,Y;;KAAAA,Y","sourcesContent":["/* \n  COMO CRIAR UM CONTEXTO \n  1 - Importar createContext do react\n  2 - atribui createContext para uma variável\n    Ex: export const CartContext = createContext([]);\n  3 - Criar o Provider\n  4 - Importar o Provider no App.js\n  5 - Consumir o contexto usando o useContex \n  ...\n*/\n\nimport { createContext, useEffect, useState } from \"react\"; // 1 \nimport Card from \"../../components/Card\";\n\nexport const CartContext = createContext([]); // 2\n\nexport function CartProvider({ children }) {\n\n  const [cart, setCart] = useState([])\n\n  function handleAddCart(card) {\n\n    if (cart.find(item => item.id === card.id)) {\n      alert('Item ja adicionado ao carrinho')\n      return\n    }\n    setCart([...cart, card])\n    localStorage.setItem(\"cart\", JSON.stringify([...cart, card]));\n    alert('Adicionado no carrinho');\n\n\n  }\n\n  function handleRemoveItemCart(id) {\n    setCart(cart.filter(item => {\n      if (item.id === id) {\n        return false; //remove item do carrinho\n      } else {\n        return true; //permanece item no carrinho\n      }\n    })\n    )\n    alert('Removido do carrinho');\n  }\n\n  useEffect(() => {\n    function handleGetItensLocalStorage() {\n      const storedArray = JSON.parse(localStorage.getItem(\"cart\"));\n      // se storage estiver vazio , coloca um array vazio\n      setCart(storedArray || [])\n    }\n    handleGetItensLocalStorage();\n  }, [])\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart: cart,\n        addItem: handleAddCart,\n        removeItem: handleRemoveItemCart\n      }}>\n      {children}\n    </CartContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}